{
    "$schema": "https://getcomposer.org/schema.json",
    "name": "franklinogf/churchesadmin",
    "type": "project",
    "description": "A admin panel for managing churches",
    "keywords": [
        "members",
        "missioaries",
        "churches",
        "church",
        "church-management",
        "church-admin-dashboard",
        "admin-panel",
        "church-management"
    ],
    "license": "MIT",
    "require": {
        "php": "^8.2",
        "bavix/laravel-wallet": "^11.4.2",
        "codezero/laravel-unique-translation": "^4.3.1",
        "filament/filament": "^3.3.26",
        "inertiajs/inertia-laravel": "^2.0.2",
        "kwn/number-to-words": "^2.11.2",
        "laravel/framework": "^12.18.0",
        "laravel/reverb": "^1.5",
        "laravel/tinker": "^2.10.1",
        "mallardduck/blade-lucide-icons": "^1.23",
        "propaganistas/laravel-phone": "^6.0.1",
        "resend/resend-laravel": "^0.19.0",
        "spatie/laravel-medialibrary": "^11.13.0",
        "spatie/laravel-pdf": "^1.6",
        "spatie/laravel-permission": "^6.20",
        "spatie/laravel-tags": "^4.10",
        "spatie/laravel-translatable": "^6.11.4",
        "stancl/tenancy": "dev-master",
        "stephenjude/filament-debugger": "^4.0.1",
        "tightenco/ziggy": "^2.5.3"
    },
    "require-dev": {
        "fakerphp/faker": "^1.24.1",
        "larastan/larastan": "^3.4.2",
        "laravel-lang/lang": "^15.22.0",
        "laravel/pail": "^1.2.3",
        "laravel/pint": "^1.22.1",
        "laravel/sail": "^1.43.1",
        "mockery/mockery": "^1.6.12",
        "nunomaduro/collision": "^8.8.1",
        "peckphp/peck": "^0.1.3",
        "pestphp/pest": "^3.8.2",
        "pestphp/pest-plugin-laravel": "^3.2",
        "pestphp/pest-plugin-type-coverage": "^3.5.1",
        "rector/rector": "^2.0.18"
    },
    "autoload": {
        "psr-4": {
            "App\\": "app/",
            "Database\\Factories\\": "database/factories/",
            "Database\\Seeders\\": "database/seeders/"
        },
        "files": [
            "app/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\": "tests/"
        }
    },
    "scripts": {
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@php artisan filament:upgrade"
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "dev": [
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fdba74,#fdba82\" \"php artisan serve\" \"php artisan queue:listen --queue=emails,default --tries=1\" \"npm run dev\" \"php artisan reverb:start\" --names='server,queue,vite,reverb'"
        ],
        "dev:ssr": [
            "npm run build:ssr",
            "Composer\\Config::disableProcessTimeout",
            "npx concurrently -c \"#93c5fd,#c4b5fd,#fb7185,#fdba74\" \"php artisan serve\" \"php artisan queue:listen --queue=emails,default --tries=1\" \"php artisan pail --timeout=0\" \"php artisan inertia:start-ssr\" --names=server,queue,logs,ssr"
        ],
        "lint": "pint -v",
        "refactor": "rector",
        "format": [
            "@refactor",
            "@lint"
        ],
        "test:refactor": "rector --dry-run",
        "test:lint": "pint --test",
        "test:types": [
            "phpstan analyse",
            "pest --type-coverage --compact --colors=always --min=100"
        ],
        "test:typos": "peck",
        "test:unit": "pest --testsuite=Unit --stop-on-failure",
        "test:feature": "pest --testsuite=Feature --stop-on-failure",
        "test:all": "pest --parallel --coverage --compact --colors=always --profile --stop-on-failure",
        "test:cleanup": "php artisan test:cleanup",
        "test:migrate": "php artisan migrate --database=testing",
        "test": [
            "@test:refactor",
            "@test:types",
            "@test:lint",
            "@test:all"
        ]
    },
    "extra": {
        "laravel": {
            "dont-discover": []
        }
    },
    "config": {
        "optimize-autoloader": true,
        "preferred-install": "dist",
        "sort-packages": true,
        "allow-plugins": {
            "pestphp/pest-plugin": true,
            "php-http/discovery": true
        }
    },
    "minimum-stability": "RC",
    "prefer-stable": true
}
