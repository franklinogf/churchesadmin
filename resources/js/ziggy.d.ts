/* This file is generated by Ziggy. */
declare module 'ziggy-js' {
  interface RouteList {
    'livewire.update': [];
    'livewire.upload-file': [];
    'livewire.preview-file': [
      {
        name: 'filename';
        required: true;
      },
    ];
    'stancl.tenancy.asset': [
      {
        name: 'path';
        required: false;
      },
    ];
    'tenant.stancl.tenancy.asset': [
      {
        name: 'tenant';
        required: true;
      },
      {
        name: 'path';
        required: false;
      },
    ];
    'root.locale': [
      {
        name: 'locale';
        required: true;
      },
    ];
    'root.home': [];
    'storage.local': [
      {
        name: 'path';
        required: true;
      },
    ];
    locale: [
      {
        name: 'locale';
        required: true;
      },
    ];
    loginLink: [];
    home: [];
    dashboard: [];
    'users.index': [];
    'users.create': [];
    'users.store': [];
    'users.edit': [
      {
        name: 'user';
        required: true;
        binding: 'id';
      },
    ];
    'users.update': [
      {
        name: 'user';
        required: true;
        binding: 'id';
      },
    ];
    'users.destroy': [
      {
        name: 'user';
        required: true;
        binding: 'id';
      },
    ];
    'members.restore': [
      {
        name: 'member';
        required: true;
        binding: 'id';
      },
    ];
    'members.forceDelete': [
      {
        name: 'member';
        required: true;
        binding: 'id';
      },
    ];
    'members.index': [];
    'members.create': [];
    'members.store': [];
    'members.show': [
      {
        name: 'member';
        required: true;
      },
    ];
    'members.edit': [
      {
        name: 'member';
        required: true;
        binding: 'id';
      },
    ];
    'members.update': [
      {
        name: 'member';
        required: true;
        binding: 'id';
      },
    ];
    'members.destroy': [
      {
        name: 'member';
        required: true;
        binding: 'id';
      },
    ];
    'missionaries.restore': [
      {
        name: 'missionary';
        required: true;
        binding: 'id';
      },
    ];
    'missionaries.forceDelete': [
      {
        name: 'missionary';
        required: true;
        binding: 'id';
      },
    ];
    'missionaries.index': [];
    'missionaries.create': [];
    'missionaries.store': [];
    'missionaries.show': [
      {
        name: 'missionary';
        required: true;
      },
    ];
    'missionaries.edit': [
      {
        name: 'missionary';
        required: true;
        binding: 'id';
      },
    ];
    'missionaries.update': [
      {
        name: 'missionary';
        required: true;
        binding: 'id';
      },
    ];
    'missionaries.destroy': [
      {
        name: 'missionary';
        required: true;
        binding: 'id';
      },
    ];
    'skills.index': [];
    'skills.store': [];
    'skills.update': [
      {
        name: 'tag';
        required: true;
        binding: 'id';
      },
    ];
    'skills.destroy': [
      {
        name: 'tag';
        required: true;
        binding: 'id';
      },
    ];
    'categories.index': [];
    'categories.store': [];
    'categories.update': [
      {
        name: 'tag';
        required: true;
        binding: 'id';
      },
    ];
    'categories.destroy': [
      {
        name: 'tag';
        required: true;
        binding: 'id';
      },
    ];
    'wallets.restore': [
      {
        name: 'wallet';
        required: true;
        binding: 'uuid';
      },
    ];
    'wallets.index': [];
    'wallets.store': [];
    'wallets.show': [
      {
        name: 'wallet';
        required: true;
        binding: 'uuid';
      },
    ];
    'wallets.update': [
      {
        name: 'wallet';
        required: true;
        binding: 'uuid';
      },
    ];
    'wallets.destroy': [
      {
        name: 'wallet';
        required: true;
        binding: 'uuid';
      },
    ];
    'offerings.index': [];
    'offerings.create': [];
    'offerings.store': [];
    'offerings.show': [
      {
        name: 'offering';
        required: true;
      },
    ];
    'offerings.edit': [
      {
        name: 'offering';
        required: true;
      },
    ];
    'offerings.update': [
      {
        name: 'offering';
        required: true;
      },
    ];
    'offerings.destroy': [
      {
        name: 'offering';
        required: true;
      },
    ];
    'expenses.index': [];
    'expenses.create': [];
    'expenses.store': [];
    'expenses.show': [
      {
        name: 'expense';
        required: true;
        binding: 'id';
      },
    ];
    'expenses.edit': [
      {
        name: 'expense';
        required: true;
        binding: 'id';
      },
    ];
    'expenses.update': [
      {
        name: 'expense';
        required: true;
        binding: 'id';
      },
    ];
    'expenses.destroy': [
      {
        name: 'expense';
        required: true;
        binding: 'id';
      },
    ];
    'codes.offeringTypes.index': [];
    'codes.offeringTypes.store': [];
    'codes.offeringTypes.update': [
      {
        name: 'offeringType';
        required: true;
        binding: 'id';
      },
    ];
    'codes.offeringTypes.destroy': [
      {
        name: 'offeringType';
        required: true;
        binding: 'id';
      },
    ];
    'codes.expenseTypes.index': [];
    'codes.expenseTypes.store': [];
    'codes.expenseTypes.update': [
      {
        name: 'expenseType';
        required: true;
        binding: 'id';
      },
    ];
    'codes.expenseTypes.destroy': [
      {
        name: 'expenseType';
        required: true;
        binding: 'id';
      },
    ];
    settings: [];
    'profile.edit': [];
    'profile.update': [];
    'profile.destroy': [];
    'password.edit': [];
    'password.update': [];
    appearance: [];
    'church.settings': [];
    'church.language.edit': [];
    'church.language.update': [];
    'church.general.edit': [];
    'church.general.update': [];
    'church.logo': [];
    login: [];
    'login.store': [];
    'password.request': [];
    'password.email': [];
    'password.reset': [
      {
        name: 'token';
        required: true;
      },
    ];
    'password.store': [];
    'verification.notice': [];
    'verification.verify': [
      {
        name: 'id';
        required: true;
      },
      {
        name: 'hash';
        required: true;
      },
    ];
    'verification.send': [];
    'password.confirm': [];
    'password.confirm.update': [];
    logout: [];
  }
}
export {};
